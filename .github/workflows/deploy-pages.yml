name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      - name: Build Storybook
        run: |
          cd frontend
          npm run build-storybook

      - name: Create deployment structure
        run: |
          mkdir -p deploy
          
          # Copy Storybook to /storybook subdirectory
          mkdir -p deploy/storybook
          cp -r frontend/storybook-static/* deploy/storybook/
          
          # Copy frontend build to root
          cp -r frontend/dist/* deploy/
          
          # Create navigation index page
          cat > deploy/nav.html << 'EOF'
          <!DOCTYPE html>
          <html lang="pt-BR">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Kwanza Agent - Navigation</title>
              <style>
                  body { 
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                      margin: 0; padding: 40px; background: #f8f9fa; 
                  }
                  .container { 
                      max-width: 800px; margin: 0 auto; background: white; 
                      padding: 40px; border-radius: 12px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); 
                  }
                  h1 { color: #FF6B35; margin-bottom: 10px; }
                  .subtitle { color: #666; margin-bottom: 30px; }
                  .cards { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin: 30px 0; }
                  .card { 
                      padding: 24px; border: 2px solid #e9ecef; border-radius: 8px; 
                      text-decoration: none; color: inherit; transition: all 0.2s;
                  }
                  .card:hover { border-color: #FF6B35; transform: translateY(-2px); }
                  .card h3 { margin: 0 0 8px 0; color: #FF6B35; }
                  .card p { margin: 0; color: #666; font-size: 14px; }
                  .footer { text-align: center; margin-top: 40px; color: #999; font-size: 14px; }
                  @media (max-width: 600px) { .cards { grid-template-columns: 1fr; } }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üåç Kwanza Agent</h1>
                  <p class="subtitle">Primeiro AI Agent para gest√£o de not√≠cias de tecnologia</p>
                  
                  <div class="cards">
                      <a href="./" class="card">
                          <h3>üöÄ Frontend Application</h3>
                          <p>Interface completa do AI Agent com tema Kwanza, autentica√ß√£o, dashboard e chat interface</p>
                      </a>
                      
                      <a href="./storybook/" class="card">
                          <h3>üìö Design System</h3>
                          <p>Documenta√ß√£o interativa com 35+ componentes, playground e testes de acessibilidade</p>
                      </a>
                  </div>
                  
                  <div class="footer">
                      <p>Desenvolvido por <a href="https://tiagopinto.io" style="color: #FF6B35;">Tiago Pinto</a></p>
                      <p><a href="https://github.com/tiagonpsilva/kwanza-agent" style="color: #FF6B35;">üîó GitHub Repository</a></p>
                  </div>
              </div>
          </body>
          </html>
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './deploy'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4